{"version":3,"sources":["assets/images/logo-dark.png","pages/account/ForgetPassword.js","components/Loader.js"],"names":["module","exports","__webpack_require__","p","ForgetPassword","props","_this","Object","D_IT_Git_test_repo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_IT_Git_test_repo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_IT_Git_test_repo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","_isMounted","handleValidSubmit","event","values","console","log","setState","isLoading","window","setTimeout","passwordResetSuccessful","renderRedirectToRoot","isUserAuthenticated","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","bind","D_IT_Git_test_repo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","onDismiss","state","document","body","classList","add","remove","isAuthTokenValid","Fragment","className","react_router_dom__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","md","lg","xl","src","logo","alt","height","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","_components_Loader__WEBPACK_IMPORTED_MODULE_20__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","color","isOpen","toggle","availity_reactstrap_validation__WEBPACK_IMPORTED_MODULE_18__","onValidSubmit","type","name","label","placeholder","required","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","Component","connect","PreLoaderWidget","react__WEBPACK_IMPORTED_MODULE_5___default","role"],"mappings":"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","file":"static/js/13.18ef9b31.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-dark.93cec560.png\";","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Link } from 'react-router-dom'\n\nimport { Container, Row, Col, Card, CardBody, FormGroup, Button, Alert } from 'reactstrap';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\n\nimport { isUserAuthenticated } from '../../helpers/authUtils';\nimport Loader from '../../components/Loader';\nimport logo from '../../assets/images/logo-dark.png';\n\nclass ForgetPassword extends Component {\n    _isMounted = false;\n\n    constructor(props) {\n        super(props);\n\n        this.handleValidSubmit = this.handleValidSubmit.bind(this);\n        this.onDismiss = this.onDismiss.bind(this);\n        this.state = {\n            passwordResetSuccessful: false,\n            isLoading: false\n        }\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        document.body.classList.add('authentication-bg');\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n        document.body.classList.remove('authentication-bg');\n    }\n\n    /**\n     * On error dismiss\n     */\n    onDismiss() {\n        this.setState({ passwordResetSuccessful: false });\n    }\n\n    /**\n     * Handles the submit\n     */\n    handleValidSubmit = (event, values) => {\n        console.log(values);\n\n        this.setState({ isLoading: true });\n\n        // You can make actual api call to register here\n\n        window.setTimeout(() => {\n            this.setState({ isLoading: false, passwordResetSuccessful: true });\n        }, 1000)\n    }\n\n\n    /**\n     * Redirect to root\n     */\n    renderRedirectToRoot = () => {\n        const isAuthTokenValid = isUserAuthenticated();\n        if (isAuthTokenValid) {\n            return <Redirect to='/' />\n        }\n    }\n\n    render() {\n        const isAuthTokenValid = isUserAuthenticated();\n        return (\n            <React.Fragment>\n\n                {this.renderRedirectToRoot()}\n\n                {(this._isMounted || !isAuthTokenValid) && <React.Fragment>\n\n                    <div className=\"home-btn d-none d-sm-block\">\n                        <Link to=\"/\"><i className=\"fas fa-home h2 text-dark\"></i></Link>\n                    </div>\n\n                    <div className=\"account-pages mt-5 mb-5\">\n                        <Container>\n                            <Row className=\"justify-content-center\">\n                                <Col md={8} lg={6} xl={5} >\n                                    <div className=\"text-center\">\n                                        <Link to=\"/\">\n                                            <span><img src={logo} alt=\"\" height=\"22\" /></span>\n                                        </Link>\n                                        <p className=\"text-muted mt-2 mb-4\">Responsive Admin Dashboard</p>\n                                    </div>\n                                    <Card >\n                                        <CardBody className=\"p-4 position-relative\">\n                                            { /* preloader */}\n                                            {this.state.isLoading && <Loader />}\n\n                                            <div className=\"text-center mb-4\">\n                                                <h4 className=\"text-uppercase mt-0 mb-3\">Reset Password</h4>\n                                                <p className=\"text-muted mb-0 font-13\">Enter your email address and we'll send you an email with instructions to reset your password.  </p>\n                                            </div>\n\n                                            <Alert color=\"success\" isOpen={this.state.passwordResetSuccessful} toggle={this.onDismiss}>\n                                                We have sent you an email containing a link to reset your password\n                                            </Alert>\n\n                                            <AvForm onValidSubmit={this.handleValidSubmit}>\n                                                <AvField type=\"email\" name=\"email\" label=\"Email address\" placeholder=\"Enter your email\" required />\n\n                                                <FormGroup className=\"mb-0 text-center\">\n                                                    <Button color=\"primary\" className=\"btn-block\">Reset Password</Button>\n                                                </FormGroup>\n                                            </AvForm>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"mt-1\">\n                                <Col className=\"col-12 text-center\">\n                                    <p className=\"text-muted\">Back to <Link to=\"/login\" className=\"text-dark ml-1\"><b>Sign In</b></Link></p>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </div>\n                </React.Fragment>}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default connect()(ForgetPassword);","import React, { Component } from 'react';\n\n/**\n * Renders the preloader\n */\nclass PreLoaderWidget extends Component {\n\n    render() {\n        return (\n            <div className=\"preloader\">\n                <div className=\"status\">\n                    <div className=\"spinner-border avatar-sm text-primary m-2\" role=\"status\"></div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PreLoaderWidget;"],"sourceRoot":""}